{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/history/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { db } from \"../../firebase/config\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from \"react-native-responsive-screen\";\nimport { theme } from \"../../theme\";\nexport default function HistoryScreen() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      history = _useState2[0],\n      setHistory = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.public;\n  }),\n      user = _useSelector.user;\n\n  var getSecurityHistory = function getSecurityHistory() {\n    var historyRef, unsubscribed;\n    return _regeneratorRuntime.async(function getSecurityHistory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"security\").doc(user.uid).collection(\"history\").orderBy(\"time\", \"desc\"));\n\n          case 2:\n            historyRef = _context.sent;\n            unsubscribed = historyRef.onSnapshot(function (querySnapshot) {\n              var _history = [];\n              querySnapshot.forEach(function (doc) {\n                _history.push(doc.data());\n              });\n              setHistory(_history);\n            });\n            return _context.abrupt(\"return\", unsubscribed);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getSecurityHistory());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"History\"), React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, history.map(function (item, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Floor Number: \", item == null ? void 0 : item.floorNumber), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Floor Description: \", item == null ? void 0 : item.description), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Date: \", moment(item == null ? void 0 : item.time.toDate()).format(\"MMM DD YYYY\")), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Time: \", moment(item == null ? void 0 : item.time.toDate()).format(\"h:mm A\")));\n  })));\n}\nvar width = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  name: {\n    fontSize: 20,\n    padding: 20,\n    color: theme.colors.primary\n  },\n  scrollContainer: {\n    width: width,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  card: {\n    width: wp(\"90%\"),\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    padding: 20,\n    backgroundColor: theme.colors.primary,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    borderRadius: 20\n  },\n  h1: {\n    fontSize: 30,\n    padding: 10\n  },\n  text: {\n    fontSize: wp(\"4%\"),\n    marginVertical: 5,\n    color: theme.colors.light\n  }\n});","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/history/index.js"],"names":["React","FC","useEffect","useState","useNavigation","db","useSelector","useDispatch","moment","ScrollView","heightPercentageToDP","hp","widthPercentageToDP","wp","theme","HistoryScreen","dispatch","navigation","history","setHistory","state","public","user","getSecurityHistory","collection","doc","uid","orderBy","historyRef","unsubscribed","onSnapshot","querySnapshot","_history","forEach","push","data","styles","container","name","scrollContainer","map","item","index","card","text","floorNumber","description","time","toDate","format","width","Dimensions","get","StyleSheet","create","flex","fontSize","padding","color","colors","primary","alignItems","justifyContent","alignSelf","title","fontWeight","separator","marginVertical","height","textAlign","backgroundColor","borderRadius","h1","light"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport { Platform, StyleSheet, Text, View, Dimensions } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { db } from \"../../firebase/config\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n} from \"react-native-responsive-screen\";\nimport { theme } from \"../../theme\";\n\nexport default function HistoryScreen() {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const [history, setHistory] = useState([]);\n\n  const { user } = useSelector((state) => state.public);\n\n  const getSecurityHistory = async () => {\n    const historyRef = await db\n      .collection(\"security\")\n      .doc(user.uid)\n      .collection(\"history\")\n      .orderBy(\"time\", \"desc\");\n\n    const unsubscribed = historyRef.onSnapshot((querySnapshot) => {\n      let _history = [];\n      querySnapshot.forEach((doc) => {\n        _history.push(doc.data());\n      });\n      setHistory(_history);\n    });\n    return unsubscribed;\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getSecurityHistory();\n    })();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.name}>History</Text>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        {history.map((item, index) => {\n          return (\n            <View key={index} style={styles.card}>\n              <Text style={styles.text}>Floor Number: {item?.floorNumber}</Text>\n              <Text style={styles.text}>\n                Floor Description: {item?.description}\n              </Text>\n              <Text style={styles.text}>\n                Date: {moment(item?.time.toDate()).format(\"MMM DD YYYY\")}\n              </Text>\n              <Text style={styles.text}>\n                Time: {moment(item?.time.toDate()).format(\"h:mm A\")}\n              </Text>\n            </View>\n          );\n        })}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst width = Dimensions.get(\"window\").width;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  name: {\n    fontSize: 20,\n    padding: 20,\n    color: theme.colors.primary,\n  },\n  scrollContainer: {\n    width: width,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  card: {\n    width: wp(\"90%\"),\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    padding: 20,\n    backgroundColor: theme.colors.primary,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    borderRadius: 20,\n  },\n  h1: {\n    fontSize: 30,\n    padding: 10,\n  },\n  text: {\n    fontSize: wp(\"4%\"),\n    marginVertical: 5,\n    color: theme.colors.light,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}