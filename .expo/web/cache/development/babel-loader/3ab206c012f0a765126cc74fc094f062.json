{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/profile/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Camera } from \"expo-camera\";\nimport firebase from \"../../firebase/config\";\nimport { db, storage } from \"../../firebase/config\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading, setScannedAsset } from \"../../redux/public/actions\";\nimport { useTheme, TextInput, Button, Avatar } from \"react-native-paper\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport Toast from \"react-native-toast-message\";\nimport * as ImagePicker from \"expo-image-picker\";\nexport default function ProfileScreen() {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var isFocused = useIsFocused();\n\n  var _useSelector = useSelector(function (state) {\n    return state.public;\n  }),\n      user = _useSelector.user;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mobileNumber = _useState6[0],\n      setMobileNumber = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photo = _useState8[0],\n      setPhoto = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              fetch(result.uri).then(function (res) {\n                return res.blob();\n              }).then(function (blob) {\n                var file = new File([blob], \"File name\", {\n                  type: \"image/png\"\n                });\n                var uploadTask = storage.ref().child(\"/profile-photo/\" + user.uid + \"/profilephoto\").put(file);\n                uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n                  var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                  console.log(\"Progress: \" + progress + \"%\");\n\n                  if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                    console.log(\"file uploading...\");\n                  }\n                }, function (error) {\n                  return console.log(error.code);\n                }, function _callee2() {\n                  var downloadURL;\n                  return _regeneratorRuntime.async(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return _regeneratorRuntime.awrap(uploadTask.snapshot.ref.getDownloadURL());\n\n                        case 2:\n                          downloadURL = _context2.sent;\n                          db.collection(\"users\").doc(user.uid).update({\n                            photo: downloadURL\n                          }).then(function (docRef) {\n                            Toast.show({\n                              position: \"bottom\",\n                              text1: \"Profile Photo successfully updated. \"\n                            });\n                            dispatch(setLoading(false));\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (user) {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setMobileNumber(user.mobileNumber);\n      setPhoto(user.photo);\n      setEmail(user.email);\n    }\n  }, [isFocused, user]);\n\n  var updateProfile = function updateProfile(values) {\n    return _regeneratorRuntime.async(function updateProfile$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(values);\n            dispatch(setLoading(true));\n\n            try {\n              db.collection(\"users\").doc(user.uid).update({\n                firstName: firstName,\n                lastName: lastName,\n                mobileNumber: mobileNumber\n              });\n              dispatch(setLoading(false));\n              Toast.show({\n                position: \"bottom\",\n                text1: \"Profile Photo successfully updated. \"\n              });\n            } catch (e) {\n              dispatch(setLoading(false));\n              console.log(e);\n            }\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(Avatar.Image, {\n    size: wp(\"30%\"),\n    source: {\n      uri: image ? image : photo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"email\",\n    label: \"Email\",\n    disabled: true,\n    style: {\n      marginVertical: 10,\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\"),\n      backgroundColor: \"#ffffff\"\n    },\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"firstName\",\n    label: \"First Name\",\n    style: {\n      marginBottom: 10,\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\"),\n      backgroundColor: \"#ffffff\"\n    },\n    onChangeText: function onChangeText(value) {\n      return setFirstName(value);\n    },\n    value: firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"lastName\",\n    label: \"Last Name\",\n    style: {\n      marginBottom: 10,\n      backgroundColor: \"#ffffff\",\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\")\n    },\n    onChangeText: function onChangeText(value) {\n      return setLastName(value);\n    },\n    value: lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"mobileNumber\",\n    label: \"Mobile Number\",\n    style: {\n      marginBottom: 10,\n      backgroundColor: \"#ffffff\",\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\")\n    },\n    onChangeText: function onChangeText(value) {\n      return setMobileNumber(value);\n    },\n    value: mobileNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"outline\",\n    style: {\n      width: 300,\n      marginBottom: 10,\n      padding: 10,\n      backgroundColor: colors.primary\n    },\n    onPress: updateProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.lighta\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"UPDATE\"))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/profile/index.js"],"names":["StatusBar","React","useEffect","useState","Camera","firebase","db","storage","useIsFocused","useNavigation","useDispatch","useSelector","setLoading","setScannedAsset","useTheme","TextInput","Button","Avatar","widthPercentageToDP","wp","heightPercentageToDP","hp","Toast","ImagePicker","ProfileScreen","colors","isFocused","state","public","user","dispatch","firstName","setFirstName","lastName","setLastName","mobileNumber","setMobileNumber","photo","setPhoto","email","setEmail","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","fetch","then","res","blob","file","File","type","uploadTask","ref","child","uid","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","RUNNING","error","code","getDownloadURL","downloadURL","collection","doc","update","docRef","show","position","text1","updateProfile","values","e","styles","container","flex","alignItems","marginVertical","width","padding","paddingBottom","fontSize","backgroundColor","value","marginBottom","primary","color","lighta","StyleSheet","create","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n} from \"react-native\";\nimport { Camera } from \"expo-camera\";\nimport firebase from \"../../firebase/config\";\nimport { db, storage } from \"../../firebase/config\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading, setScannedAsset } from \"../../redux/public/actions\";\nimport { useTheme, TextInput, Button, Avatar } from \"react-native-paper\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\nimport Toast from \"react-native-toast-message\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function ProfileScreen() {\n  const { colors } = useTheme();\n  const isFocused = useIsFocused();\n  const { user } = useSelector((state) => state.public);\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const {\n          status,\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n\n      fetch(result.uri)\n        .then((res) => res.blob())\n        .then((blob) => {\n          const file = new File([blob], \"File name\", { type: \"image/png\" });\n          const uploadTask = storage\n            .ref()\n            .child(`/profile-photo/${user.uid}/profilephoto`)\n            .put(file);\n\n          uploadTask.on(\n            firebase.storage.TaskEvent.STATE_CHANGED,\n            (snapshot) => {\n              const progress =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n              console.log(`Progress: ${progress}%`);\n              if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                console.log(\"file uploading...\");\n              }\n              // ...etc\n            },\n            (error) => console.log(error.code),\n            async () => {\n              const downloadURL = await uploadTask.snapshot.ref.getDownloadURL();\n\n              db.collection(\"users\")\n                .doc(user.uid)\n                .update({\n                  photo: downloadURL,\n                })\n                .then((docRef) => {\n                  Toast.show({\n                    position: \"bottom\",\n                    text1: \"Profile Photo successfully updated. \",\n                  });\n                  dispatch(setLoading(false));\n                });\n            }\n          );\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n      setMobileNumber(user.mobileNumber);\n      setPhoto(user.photo);\n      setEmail(user.email);\n    }\n  }, [isFocused, user]);\n\n  const updateProfile = async (values) => {\n    console.log(values);\n    dispatch(setLoading(true));\n\n    try {\n      db.collection(\"users\").doc(user.uid).update({\n        firstName,\n        lastName,\n        mobileNumber,\n      });\n      dispatch(setLoading(false));\n      Toast.show({\n        position: \"bottom\",\n        text1: \"Profile Photo successfully updated. \",\n      });\n    } catch (e) {\n      dispatch(setLoading(false));\n      console.log(e);\n    }\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={pickImage}>\n          <Avatar.Image\n            size={wp(\"30%\")}\n            source={{ uri: image ? image : photo }}\n          />\n        </TouchableOpacity>\n        <TextInput\n          autoCapitalize=\"none\"\n          name=\"email\"\n          label=\"Email\"\n          disabled\n          style={{\n            marginVertical: 10,\n            width: wp(\"95%\"),\n            padding: 5,\n            paddingBottom: 0,\n            fontSize: wp(\"4%\"),\n            backgroundColor: \"#ffffff\",\n          }}\n          onChangeText={(value) => setEmail(value)}\n          value={email}\n        />\n        <TextInput\n          autoCapitalize=\"none\"\n          name=\"firstName\"\n          label=\"First Name\"\n          style={{\n            marginBottom: 10,\n            width: wp(\"95%\"),\n            padding: 5,\n            paddingBottom: 0,\n            fontSize: wp(\"4%\"),\n            backgroundColor: \"#ffffff\",\n          }}\n          onChangeText={(value) => setFirstName(value)}\n          value={firstName}\n        />\n\n        <TextInput\n          autoCapitalize=\"none\"\n          name=\"lastName\"\n          label=\"Last Name\"\n          style={{\n            marginBottom: 10,\n            backgroundColor: \"#ffffff\",\n\n            width: wp(\"95%\"),\n            padding: 5,\n            paddingBottom: 0,\n            fontSize: wp(\"4%\"),\n          }}\n          onChangeText={(value) => setLastName(value)}\n          value={lastName}\n        />\n        <TextInput\n          autoCapitalize=\"none\"\n          name=\"mobileNumber\"\n          label=\"Mobile Number\"\n          style={{\n            marginBottom: 10,\n            backgroundColor: \"#ffffff\",\n\n            width: wp(\"95%\"),\n            padding: 5,\n            paddingBottom: 0,\n            fontSize: wp(\"4%\"),\n          }}\n          onChangeText={(value) => setMobileNumber(value)}\n          value={mobileNumber}\n        />\n        <Button\n          mode=\"outline\"\n          style={{\n            width: 300,\n            marginBottom: 10,\n            padding: 10,\n            backgroundColor: colors.primary,\n          }}\n          onPress={updateProfile}\n        >\n          <Text style={{ color: colors.lighta }}>UPDATE</Text>\n        </Button>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}