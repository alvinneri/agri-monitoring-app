{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/components/carousel.js\";\n\nimport React, { useRef, useEffect } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Carousel from \"react-native-snap-carousel\";\nimport Image from \"react-native-image-progress\";\nimport { ProgressBar } from \"react-native-progress\";\nexport var CarouselComponent = function CarouselComponent(_ref) {\n  var photos = _ref.photos,\n      navigation = _ref.navigation,\n      rest = _objectWithoutProperties(_ref, [\"photos\", \"navigation\"]);\n\n  var carousel = useRef(null);\n\n  var _Dimensions$get = Dimensions.get(\"screen\"),\n      viewportWidth = _Dimensions$get.width,\n      viewportHeight = _Dimensions$get.height;\n\n  var wp = function wp(percentage) {\n    var value = percentage * viewportWidth / 100;\n    return Math.round(value);\n  };\n\n  var slideWidth = wp(100);\n  var itemHorizontalMargin = wp(1);\n  var sliderWidth = viewportWidth;\n  var itemWidth = slideWidth + itemHorizontalMargin * 10;\n\n  var renderCard = function renderCard(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item != null && item.uri ? item.uri : item\n      },\n      indicator: ProgressBar,\n      style: [{\n        height: 350,\n        width: \"100%\",\n        backgroundColor: \"#000000\"\n      }],\n      resizeMode: \"contain\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Carousel, {\n    ref: carousel,\n    data: photos,\n    renderItem: renderCard,\n    sliderWidth: sliderWidth,\n    itemWidth: itemWidth,\n    activeSlideAlignment: \"start\",\n    inactiveSlideOpacity: 1,\n    inactiveSlideScale: 1,\n    callbackOffsetMargin: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/components/carousel.js"],"names":["React","useRef","useEffect","Carousel","Image","ProgressBar","CarouselComponent","photos","navigation","rest","carousel","Dimensions","get","viewportWidth","width","viewportHeight","height","wp","percentage","value","Math","round","slideWidth","itemHorizontalMargin","sliderWidth","itemWidth","renderCard","item","uri","backgroundColor","styles","StyleSheet","create","container","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;;;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAqC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAXC,IAAW;;AACpE,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;;AADoE,wBAEXU,UAAU,CAACC,GAAX,CACvD,QADuD,CAFW;AAAA,MAErDC,aAFqD,mBAE5DC,KAF4D;AAAA,MAE9BC,cAF8B,mBAEtCC,MAFsC;;AAKpE,MAAMC,EAAE,GAAG,SAALA,EAAK,CAACC,UAAD,EAAgB;AACzB,QAAMC,KAAK,GAAID,UAAU,GAAGL,aAAd,GAA+B,GAA7C;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP;AACD,GAHD;;AAIA,MAAMG,UAAU,GAAGL,EAAE,CAAC,GAAD,CAArB;AACA,MAAMM,oBAAoB,GAAGN,EAAE,CAAC,CAAD,CAA/B;AACA,MAAMO,WAAW,GAAGX,aAApB;AACA,MAAMY,SAAS,GAAGH,UAAU,GAAGC,oBAAoB,GAAG,EAAtD;;AAEA,MAAMG,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC/B,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAED,IAAI,QAAJ,IAAAA,IAAI,CAAEC,GAAN,GAAYD,IAAI,CAACC,GAAjB,GAAuBD;AAA9B,OADV;AAEE,MAAA,SAAS,EAAEtB,WAFb;AAGE,MAAA,KAAK,EAAE,CAAC;AAAEW,QAAAA,MAAM,EAAE,GAAV;AAAeF,QAAAA,KAAK,EAAE,MAAtB;AAA8Be,QAAAA,eAAe,EAAE;AAA/C,OAAD,CAHT;AAIE,MAAA,UAAU,EAAC,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAYD,GAbD;;AAeA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEnB,QADP;AAEE,IAAA,IAAI,EAAEH,MAFR;AAGE,IAAA,UAAU,EAAEmB,UAHd;AAIE,IAAA,WAAW,EAAEF,WAJf;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,oBAAoB,EAAE,OANxB;AAOE,IAAA,oBAAoB,EAAE,CAPxB;AAQE,IAAA,kBAAkB,EAAE,CARtB;AASE,IAAA,oBAAoB,EAAE,EATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CA5CM;AA8CP,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE;AAFP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Dimensions, Text, View, StyleSheet } from \"react-native\";\nimport Carousel from \"react-native-snap-carousel\";\nimport Image from \"react-native-image-progress\";\nimport { ProgressBar } from \"react-native-progress\";\n\nexport const CarouselComponent = ({ photos, navigation, ...rest }) => {\n  const carousel = useRef(null);\n  const { width: viewportWidth, height: viewportHeight } = Dimensions.get(\n    \"screen\"\n  );\n  const wp = (percentage) => {\n    const value = (percentage * viewportWidth) / 100;\n    return Math.round(value);\n  };\n  const slideWidth = wp(100);\n  const itemHorizontalMargin = wp(1);\n  const sliderWidth = viewportWidth;\n  const itemWidth = slideWidth + itemHorizontalMargin * 10;\n\n  const renderCard = ({ item }) => {\n    return (\n      <View>\n        <View>\n          <Image\n            source={{ uri: item?.uri ? item.uri : item }}\n            indicator={ProgressBar}\n            style={[{ height: 350, width: \"100%\", backgroundColor: \"#000000\" }]}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      <Carousel\n        ref={carousel}\n        data={photos}\n        renderItem={renderCard}\n        sliderWidth={sliderWidth}\n        itemWidth={itemWidth}\n        activeSlideAlignment={\"start\"}\n        inactiveSlideOpacity={1}\n        inactiveSlideScale={1}\n        callbackOffsetMargin={10}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}