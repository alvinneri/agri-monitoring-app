{"ast":null,"code":"var _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/home/index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { FC, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Toast from \"react-native-toast-message\";\nimport { setLoading, setUser } from \"../../redux/public/actions\";\nexport default function HomeScreen() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useSelector = useSelector(function (state) {\n    return state.public;\n  }),\n      user = _useSelector.user;\n\n  var checkUser = function checkUser() {\n    var _user2, _user;\n\n    return _regeneratorRuntime.async(function checkUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(setLoading(true));\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user\"));\n\n          case 4:\n            _user2 = _context.sent;\n            _user = JSON.parse(_user2);\n\n            if (_user) {\n              _context.next = 10;\n              break;\n            }\n\n            dispatch(setLoading(false));\n            navigation.navigate(\"Auth\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            dispatch(setUser(_user));\n            dispatch(setLoading(false));\n            _context.next = 19;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(setUser(null));\n            navigation.navigate(\"Auth\");\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 14]], Promise);\n  };\n\n  useEffect(function () {\n    checkUser();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Welcome \", user == null ? void 0 : user.firstName, \"!\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  name: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/home/index.js"],"names":["React","FC","useEffect","useNavigation","TextInput","Button","AsyncStorage","useSelector","useDispatch","Toast","setLoading","setUser","HomeScreen","dispatch","navigation","state","public","user","checkUser","getItem","_user","JSON","parse","navigate","console","log","styles","container","name","firstName","StyleSheet","create","flex","alignItems","justifyContent","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,EAAhB,EAAoBC,SAApB,QAAqC,OAArC;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,UAAU,GAAGX,aAAa,EAAhC;;AAFmC,qBAGlBI,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAHO;AAAA,MAG3BC,IAH2B,gBAG3BA,IAH2B;;AAKnC,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBL,YAAAA,QAAQ,CAACH,UAAU,CAAC,IAAD,CAAX,CAAR;AADgB;AAAA;AAAA,6CAGKJ,YAAY,CAACa,OAAb,CAAqB,OAArB,CAHL;;AAAA;AAGRF,YAAAA,MAHQ;AAIRG,YAAAA,KAJQ,GAIAC,IAAI,CAACC,KAAL,CAAWL,MAAX,CAJA;;AAAA,gBAKTG,KALS;AAAA;AAAA;AAAA;;AAMZP,YAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AACAI,YAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AAPY;;AAAA;AAUdV,YAAAA,QAAQ,CAACF,OAAO,CAACS,KAAD,CAAR,CAAR;AACAP,YAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AAXc;AAAA;;AAAA;AAAA;AAAA;AAadG,YAAAA,QAAQ,CAACF,OAAO,CAAC,IAAD,CAAR,CAAR;AACAG,YAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AACAC,YAAAA,OAAO,CAACC,GAAR;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAmBAvB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCX,IAAnC,oBAAmCA,IAAI,CAAEY,SAAzC,MADF,CADF;AAKD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,QAAQ,EAAE;AADN;AANyB,CAAlB,CAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { Platform, StyleSheet, Text, View } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Toast from \"react-native-toast-message\";\nimport { setLoading, setUser } from \"../../redux/public/actions\";\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { user } = useSelector((state) => state.public);\n\n  const checkUser = async () => {\n    dispatch(setLoading(true));\n    try {\n      const user = await AsyncStorage.getItem(\"@user\");\n      const _user = JSON.parse(user);\n      if (!_user) {\n        dispatch(setLoading(false));\n        navigation.navigate(\"Auth\");\n        return;\n      }\n      dispatch(setUser(_user));\n      dispatch(setLoading(false));\n    } catch (e) {\n      dispatch(setUser(null));\n      navigation.navigate(\"Auth\");\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.name}>Welcome {user?.firstName}!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  name: {\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}