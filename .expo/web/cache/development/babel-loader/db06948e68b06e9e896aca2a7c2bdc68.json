{"ast":null,"code":"var _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/auth/forgotpassword.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { db, auth } from \"../../firebase/config\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useForm } from \"react-hook-form\";\nimport Toast from \"react-native-toast-message\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading, setUser } from \"../../redux/public/actions\";\nexport default function ForgotPasswordScreen() {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  useEffect(function () {\n    register({\n      name: \"email\"\n    }, {\n      required: true\n    });\n  }, []);\n\n  var submit = function submit(values) {\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.sendPasswordResetEmail(values.email));\n\n          case 4:\n            Toast.show({\n              type: \"success\",\n              position: \"bottom\",\n              text1: \"Password reset link was sent to you email.\"\n            });\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            Toast.show({\n              type: \"error\",\n              position: \"bottom\",\n              text1: _context.t0.message\n            });\n\n          case 10:\n            _context.prev = 10;\n            setLoading(false);\n            setValue(\"email\", \"\", true);\n            return _context.finish(10);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7, 10, 14]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      marginVertical: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Password Reset\"), React.createElement(TextInput, {\n    name: \"email\",\n    autoCapitalize: \"none\",\n    style: {\n      width: 300,\n      marginBottom: 10\n    },\n    label: \"Email Address\",\n    onChangeText: function onChangeText(text) {\n      return setValue(\"email\", text, true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: {\n      width: 300,\n      marginBottom: 10,\n      padding: 10\n    },\n    onPress: handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"SUBMIT\"), React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 50,\n      marginVertical: 10,\n      alignSelf: \"flex-end\"\n    },\n    onPress: function onPress() {\n      navigation.navigate(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Back to Login\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  }\n});","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/auth/forgotpassword.js"],"names":["React","FC","useEffect","useState","useNavigation","db","auth","TextInput","Button","AsyncStorage","useForm","Toast","useDispatch","setLoading","setUser","ForgotPasswordScreen","navigation","dispatch","register","setValue","handleSubmit","errors","reset","name","required","submit","values","sendPasswordResetEmail","email","show","type","position","text1","message","styles","container","fontSize","marginVertical","width","marginBottom","text","padding","marginRight","alignSelf","navigate","StyleSheet","create","flex","alignItems","justifyContent","title","fontWeight","separator","height"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { db, auth } from \"../../firebase/config\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useForm } from \"react-hook-form\";\nimport Toast from \"react-native-toast-message\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading, setUser } from \"../../redux/public/actions\";\n\nexport default function ForgotPasswordScreen() {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const { register, setValue, handleSubmit, errors, reset } = useForm();\n\n  useEffect(() => {\n    register({ name: \"email\" }, { required: true });\n  }, []);\n\n  const submit = async (values) => {\n    setLoading(true);\n    try {\n      await auth.sendPasswordResetEmail(values.email);\n      Toast.show({\n        type: \"success\",\n        position: \"bottom\",\n        text1: \"Password reset link was sent to you email.\",\n      });\n    } catch (err) {\n      Toast.show({\n        type: \"error\",\n        position: \"bottom\",\n        text1: err.message,\n      });\n    } finally {\n      setLoading(false);\n      setValue(\"email\", \"\", true);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 30, marginVertical: 20 }}>Password Reset</Text>\n      <TextInput\n        name=\"email\"\n        autoCapitalize=\"none\"\n        style={{ width: 300, marginBottom: 10 }}\n        label=\"Email Address\"\n        onChangeText={(text) => setValue(\"email\", text, true)}\n      />\n      <Button\n        mode=\"contained\"\n        style={{ width: 300, marginBottom: 10, padding: 10 }}\n        onPress={handleSubmit(submit)}\n      >\n        SUBMIT\n      </Button>\n      <TouchableOpacity\n        style={{ marginRight: 50, marginVertical: 10, alignSelf: \"flex-end\" }}\n        onPress={() => {\n          navigation.navigate(\"Login\");\n        }}\n      >\n        <Text>Back to Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}