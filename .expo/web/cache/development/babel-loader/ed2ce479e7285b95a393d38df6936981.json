{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/maintenance/reportmaintenance.js\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Camera } from \"expo-camera\";\nimport firebase from \"../../firebase/config\";\nimport { db, storage } from \"../../firebase/config\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading, setScannedAsset } from \"../../redux/public/actions\";\nimport { useTheme, TextInput, Button } from \"react-native-paper\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport Toast from \"react-native-toast-message\";\nimport { theme } from \"../../theme\";\nimport { ImageModal } from \"./ImageModal\";\nimport { Scanner } from \"./Scanner\";\nvar camera;\nexport default function ReportMaintenanceScreen() {\n  var isFocused = useIsFocused();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      startCamera = _useState2[0],\n      setStartCamera = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      previewVisible = _useState4[0],\n      setPreviewVisible = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      capturedImage = _useState6[0],\n      setCapturedImage = _useState6[1];\n\n  var _useState7 = useState(Camera.Constants.Type.back),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cameraType = _useState8[0],\n      setCameraType = _useState8[1];\n\n  var _useState9 = useState(\"off\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      flashMode = _useState10[0],\n      setFlashMode = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.public;\n  }),\n      user = _useSelector.user,\n      scannedAsset = _useSelector.scannedAsset;\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      description = _useState12[0],\n      setDescription = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      photos = _useState14[0],\n      setPhotos = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      openScanner = _useState18[0],\n      setOpenScanner = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      assetCode = _useState20[0],\n      setAssetCode = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      assetName = _useState22[0],\n      setAssetName = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      assetId = _useState24[0],\n      setAssetId = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      areaCode = _useState26[0],\n      setAreaCode = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      areaName = _useState28[0],\n      setAreaName = _useState28[1];\n\n  var dispatch = useDispatch();\n\n  var __startCamera = function __startCamera() {\n    var _await$Camera$request, status;\n\n    return _regeneratorRuntime.async(function __startCamera$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n          case 2:\n            _await$Camera$request = _context.sent;\n            status = _await$Camera$request.status;\n            console.log(status);\n\n            if (status === \"granted\") {\n              setStartCamera(true);\n            } else {\n              Alert.alert(\"Access denied\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var __takePicture = function __takePicture() {\n    var photo;\n    return _regeneratorRuntime.async(function __takePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync());\n\n          case 2:\n            photo = _context2.sent;\n            setPreviewVisible(true);\n            setCapturedImage(photo);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var __retakePicture = function __retakePicture() {\n    setCapturedImage(null);\n    setPreviewVisible(false);\n\n    __startCamera();\n  };\n\n  var __handleFlashMode = function __handleFlashMode() {\n    if (flashMode === \"on\") {\n      setFlashMode(\"off\");\n    } else if (flashMode === \"off\") {\n      setFlashMode(\"on\");\n    } else {\n      setFlashMode(\"auto\");\n    }\n  };\n\n  var __switchCamera = function __switchCamera() {\n    if (cameraType === \"back\") {\n      setCameraType(\"front\");\n    } else {\n      setCameraType(\"back\");\n    }\n  };\n\n  var __savePhoto = function __savePhoto() {\n    var _photos;\n\n    return _regeneratorRuntime.async(function __savePhoto$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setPreviewVisible(false);\n            setStartCamera(false);\n            _photos = _toConsumableArray(photos);\n\n            _photos.push(capturedImage);\n\n            console.log(_photos);\n            setPhotos(_photos);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (scannedAsset) {\n      setAssetCode(scannedAsset.assetCode);\n      setAssetName(scannedAsset.assetName);\n      setAssetId(scannedAsset.id);\n      setAreaName(scannedAsset.areaName);\n      setAreaCode(scannedAsset.areaCode);\n    }\n  }, [isFocused, scannedAsset]);\n\n  var onSubmit = function onSubmit(values) {\n    var _downdloadUrls, date, filename;\n\n    return _regeneratorRuntime.async(function onSubmit$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(values);\n            dispatch(setLoading(true));\n\n            try {\n              _downdloadUrls = [];\n              date = new Date();\n              filename = date.getDate() + \"_\" + date.getMonth() + \"_\" + date.getFullYear() + \"_\" + date.getHours() + \"_\" + date.getMinutes() + \"_\" + date.getSeconds();\n              photos.forEach(function (item, index) {\n                fetch(item.uri).then(function (res) {\n                  return res.blob();\n                }).then(function (blob) {\n                  var file = new File([blob], \"File name\", {\n                    type: \"image/png\"\n                  });\n                  var uploadTask = storage.ref().child(\"/maintenance/\" + user.invitedBy + \"/\" + filename + \"_\" + index).put(file);\n                  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n                    var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n                    console.log(\"Progress: \" + progress + \"%\");\n\n                    if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                      console.log(\"file uploading...\");\n                    }\n                  }, function (error) {\n                    return console.log(error.code);\n                  }, function _callee() {\n                    var downloadURL, _values;\n\n                    return _regeneratorRuntime.async(function _callee$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return _regeneratorRuntime.awrap(uploadTask.snapshot.ref.getDownloadURL());\n\n                          case 2:\n                            downloadURL = _context4.sent;\n\n                            _downdloadUrls.push(downloadURL);\n\n                            if (index === photos.length - 1) {\n                              _values = {\n                                condoId: user.invitedBy.trim(),\n                                reporterUid: user.uid,\n                                reporterName: user.firstName + \" \" + user.lastName,\n                                asset: scannedAsset ? scannedAsset : null,\n                                description: description,\n                                image: _downdloadUrls,\n                                date: new Date(),\n                                status: \"OPEN\"\n                              };\n                              console.log(_values);\n                              db.collection(\"maintenance\").add(_values).then(function (docRef) {\n                                setStartCamera(false);\n                                setCapturedImage(null);\n                                setPhotos([]);\n                                setDescription(\"\");\n                                setScannedAsset(null);\n\n                                if (assetId) {\n                                  db.collection(\"assets\").doc(assetId).collection(\"history\").add({\n                                    assetCode: assetCode,\n                                    assetName: assetName,\n                                    location: {\n                                      areaCode: areaCode,\n                                      areaName: areaName\n                                    },\n                                    others: \"Reported by \" + user.firstName + \" \" + user.lastName,\n                                    date: new Date(),\n                                    type: \"ASSET_REPORTS\"\n                                  });\n                                }\n\n                                Toast.show({\n                                  position: \"bottom\",\n                                  text1: \"Report successfully submitted. \"\n                                });\n                                dispatch(setLoading(false));\n                              });\n                            }\n\n                          case 5:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  });\n                });\n              });\n            } catch (e) {\n              dispatch(setLoading(false));\n              console.log(e);\n            }\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageModal, {\n    image: photos,\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }), React.createElement(Scanner, {\n    setOpenScanner: setOpenScanner,\n    openScanner: openScanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), startCamera ? React.createElement(View, {\n    style: {\n      flex: 1,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, previewVisible && capturedImage ? React.createElement(CameraPreview, {\n    photo: capturedImage,\n    savePhoto: __savePhoto,\n    retakePicture: __retakePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }) : React.createElement(Camera, {\n    type: cameraType,\n    flashMode: flashMode,\n    style: {\n      flex: 1\n    },\n    ref: function ref(r) {\n      camera = r;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"transparent\",\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      left: \"5%\",\n      top: \"10%\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setStartCamera(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#ffffff\",\n      fontSize: 20,\n      marginVertical: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, \"BACK\")), React.createElement(TouchableOpacity, {\n    onPress: __handleFlashMode,\n    style: {\n      backgroundColor: flashMode === \"off\" ? \"#000\" : \"#fff\",\n      borderRadius: 50,\n      height: 25,\n      width: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, \"\\u26A1\\uFE0F\")), React.createElement(TouchableOpacity, {\n    onPress: __switchCamera,\n    style: {\n      marginTop: 20,\n      borderRadius: 50,\n      height: 25,\n      width: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, cameraType === \"front\" ? \"🤳\" : \"📷\"))), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      bottom: 0,\n      flexDirection: \"row\",\n      flex: 1,\n      width: \"100%\",\n      padding: 20,\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      alignSelf: \"center\",\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: __takePicture,\n    style: {\n      width: 70,\n      height: 70,\n      bottom: 0,\n      borderRadius: 50,\n      backgroundColor: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  })))))) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setOpenScanner(true);\n    },\n    style: {\n      width: 130,\n      borderRadius: 4,\n      backgroundColor: colors.lighta,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: 40,\n      marginLeft: 10,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.primary,\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, \"Scan QR Code\")), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"assetCode\",\n    label: \"Scan Asset Code\",\n    disabled: true,\n    style: {\n      marginVertical: 10,\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\"),\n      backgroundColor: \"#ffffff\"\n    },\n    onChangeText: function onChangeText(value) {\n      return setSubject(value);\n    },\n    value: assetCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    name: \"assetName\",\n    label: \"Asset Name\",\n    disabled: true,\n    style: {\n      marginBottom: 10,\n      width: wp(\"95%\"),\n      padding: 5,\n      paddingBottom: 0,\n      fontSize: wp(\"4%\"),\n      backgroundColor: \"#ffffff\"\n    },\n    onChangeText: function onChangeText(value) {\n      return setSubject(value);\n    },\n    value: assetName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    multiline: true,\n    name: \"Description\",\n    label: \"Description\",\n    numberOfLines: 4,\n    style: {\n      marginBottom: 10,\n      backgroundColor: \"#ffffff\",\n      height: hp(\"10%\"),\n      width: wp(\"95%\"),\n      padding: 5,\n      fontSize: wp(\"4%\")\n    },\n    onChangeText: function onChangeText(value) {\n      return setDescription(value);\n    },\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: __startCamera,\n    style: {\n      width: 130,\n      borderRadius: 4,\n      backgroundColor: colors.lighta,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: 40,\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.primary,\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, \"Take A Picture\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setOpen(true);\n    },\n    style: {\n      width: 130,\n      borderRadius: 4,\n      backgroundColor: colors.lighta,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: 40,\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.primary,\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, \"View Photos\")))), description ? photos.length !== 0 ? React.createElement(Button, {\n    mode: \"outline\",\n    style: {\n      width: 300,\n      marginBottom: 10,\n      padding: 10,\n      backgroundColor: colors.lighta\n    },\n    onPress: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.primary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, \"SUBMIT\")) : null : null, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar CameraPreview = function CameraPreview(_ref) {\n  var photo = _ref.photo,\n      retakePicture = _ref.retakePicture,\n      savePhoto = _ref.savePhoto;\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"transparent\",\n      flex: 1,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: photo && photo.uri\n    },\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column\",\n      padding: 15,\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: retakePicture,\n    style: {\n      width: 130,\n      height: 40,\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, \"Re-take\")), React.createElement(TouchableOpacity, {\n    onPress: savePhoto,\n    style: {\n      width: 130,\n      height: 40,\n      alignItems: \"center\",\n      borderRadius: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 15\n    }\n  }, \"save photo\"))))));\n};","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/screens/maintenance/reportmaintenance.js"],"names":["StatusBar","React","useEffect","useState","Camera","firebase","db","storage","useIsFocused","useNavigation","useDispatch","useSelector","setLoading","setScannedAsset","useTheme","TextInput","Button","widthPercentageToDP","wp","heightPercentageToDP","hp","Toast","theme","ImageModal","Scanner","camera","ReportMaintenanceScreen","isFocused","colors","startCamera","setStartCamera","previewVisible","setPreviewVisible","capturedImage","setCapturedImage","Constants","Type","back","cameraType","setCameraType","flashMode","setFlashMode","state","public","user","scannedAsset","description","setDescription","photos","setPhotos","open","setOpen","openScanner","setOpenScanner","assetCode","setAssetCode","assetName","setAssetName","assetId","setAssetId","areaCode","setAreaCode","areaName","setAreaName","dispatch","__startCamera","requestPermissionsAsync","status","console","log","Alert","alert","__takePicture","takePictureAsync","photo","__retakePicture","__handleFlashMode","__switchCamera","__savePhoto","_photos","push","id","onSubmit","values","_downdloadUrls","date","Date","filename","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","forEach","item","index","fetch","uri","then","res","blob","file","File","type","uploadTask","ref","child","invitedBy","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","RUNNING","error","code","getDownloadURL","downloadURL","length","_values","condoId","trim","reporterUid","uid","reporterName","firstName","lastName","asset","image","collection","add","docRef","doc","location","others","show","position","text1","e","styles","container","flex","width","height","r","backgroundColor","flexDirection","left","top","justifyContent","color","fontSize","marginVertical","borderRadius","marginTop","bottom","padding","alignSelf","alignItems","lighta","marginLeft","primary","fontWeight","textAlign","paddingBottom","value","setSubject","marginBottom","StyleSheet","create","CameraPreview","retakePicture","savePhoto"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Alert,\n  ImageBackground,\n  Modal,\n} from \"react-native\";\nimport { Camera } from \"expo-camera\";\nimport firebase from \"../../firebase/config\";\nimport { db, storage } from \"../../firebase/config\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading, setScannedAsset } from \"../../redux/public/actions\";\nimport { useTheme, TextInput, Button } from \"react-native-paper\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\nimport Toast from \"react-native-toast-message\";\nimport { theme } from \"../../theme\";\nimport { ImageModal } from \"./ImageModal\";\nimport { Scanner } from \"./Scanner\";\nlet camera;\nexport default function ReportMaintenanceScreen() {\n  const isFocused = useIsFocused();\n  const { colors } = useTheme();\n  const [startCamera, setStartCamera] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [cameraType, setCameraType] = useState(Camera.Constants.Type.back);\n  const [flashMode, setFlashMode] = useState(\"off\");\n  const { user, scannedAsset } = useSelector((state) => state.public);\n  const [description, setDescription] = useState(\"\");\n  const [photos, setPhotos] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openScanner, setOpenScanner] = useState(false);\n  const [assetCode, setAssetCode] = useState(\"\");\n  const [assetName, setAssetName] = useState(\"\");\n  const [assetId, setAssetId] = useState(\"\");\n  const [areaCode, setAreaCode] = useState(\"\");\n  const [areaName, setAreaName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const __startCamera = async () => {\n    const { status } = await Camera.requestPermissionsAsync();\n    console.log(status);\n    if (status === \"granted\") {\n      setStartCamera(true);\n    } else {\n      Alert.alert(\"Access denied\");\n    }\n  };\n  const __takePicture = async () => {\n    const photo = await camera.takePictureAsync();\n    setPreviewVisible(true);\n    setCapturedImage(photo);\n  };\n\n  const __retakePicture = () => {\n    setCapturedImage(null);\n    setPreviewVisible(false);\n    __startCamera();\n  };\n  const __handleFlashMode = () => {\n    if (flashMode === \"on\") {\n      setFlashMode(\"off\");\n    } else if (flashMode === \"off\") {\n      setFlashMode(\"on\");\n    } else {\n      setFlashMode(\"auto\");\n    }\n  };\n  const __switchCamera = () => {\n    if (cameraType === \"back\") {\n      setCameraType(\"front\");\n    } else {\n      setCameraType(\"back\");\n    }\n  };\n\n  const __savePhoto = async () => {\n    setPreviewVisible(false);\n    setStartCamera(false);\n    let _photos = [...photos];\n    _photos.push(capturedImage);\n    console.log(_photos);\n    setPhotos(_photos);\n  };\n\n  useEffect(() => {\n    if (scannedAsset) {\n      setAssetCode(scannedAsset.assetCode);\n      setAssetName(scannedAsset.assetName);\n      setAssetId(scannedAsset.id);\n      setAreaName(scannedAsset.areaName);\n      setAreaCode(scannedAsset.areaCode);\n    }\n  }, [isFocused, scannedAsset]);\n\n  const onSubmit = async (values) => {\n    console.log(values);\n    dispatch(setLoading(true));\n\n    try {\n      let _downdloadUrls = [];\n      const date = new Date();\n      const filename = `${date.getDate()}_${date.getMonth()}_${date.getFullYear()}_${date.getHours()}_${date.getMinutes()}_${date.getSeconds()}`;\n\n      photos.forEach((item, index) => {\n        fetch(item.uri)\n          .then((res) => res.blob())\n          .then((blob) => {\n            const file = new File([blob], \"File name\", { type: \"image/png\" });\n            const uploadTask = storage\n              .ref()\n              .child(`/maintenance/${user.invitedBy}/${filename}_${index}`)\n              .put(file);\n\n            uploadTask.on(\n              firebase.storage.TaskEvent.STATE_CHANGED,\n              (snapshot) => {\n                const progress =\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log(`Progress: ${progress}%`);\n                if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                  console.log(\"file uploading...\");\n                }\n                // ...etc\n              },\n              (error) => console.log(error.code),\n              async () => {\n                const downloadURL = await uploadTask.snapshot.ref.getDownloadURL();\n                _downdloadUrls.push(downloadURL);\n                if (index === photos.length - 1) {\n                  const _values = {\n                    condoId: user.invitedBy.trim(),\n                    reporterUid: user.uid,\n                    reporterName: `${user.firstName} ${user.lastName}`,\n                    asset: scannedAsset ? scannedAsset : null,\n                    description: description,\n                    image: _downdloadUrls,\n                    date: new Date(),\n                    status: \"OPEN\",\n                  };\n\n                  console.log(_values);\n\n                  db.collection(\"maintenance\")\n                    .add(_values)\n                    .then((docRef) => {\n                      setStartCamera(false);\n                      setCapturedImage(null);\n                      setPhotos([]);\n                      setDescription(\"\");\n                      setScannedAsset(null);\n\n                      if (assetId) {\n                        db.collection(\"assets\")\n                          .doc(assetId)\n                          .collection(\"history\")\n                          .add({\n                            assetCode: assetCode,\n                            assetName: assetName,\n                            location: {\n                              areaCode: areaCode,\n                              areaName: areaName,\n                            },\n                            others: `Reported by ${user.firstName} ${user.lastName}`,\n                            date: new Date(),\n                            type: \"ASSET_REPORTS\",\n                          });\n                      }\n\n                      Toast.show({\n                        position: \"bottom\",\n                        text1: \"Report successfully submitted. \",\n                      });\n                      dispatch(setLoading(false));\n                    });\n                }\n              }\n            );\n          });\n      });\n    } catch (e) {\n      dispatch(setLoading(false));\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ImageModal image={photos} open={open} setOpen={setOpen} />\n      <Scanner setOpenScanner={setOpenScanner} openScanner={openScanner} />\n      {startCamera ? (\n        <View\n          style={{\n            flex: 1,\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          {previewVisible && capturedImage ? (\n            <CameraPreview\n              photo={capturedImage}\n              savePhoto={__savePhoto}\n              retakePicture={__retakePicture}\n            />\n          ) : (\n            <Camera\n              type={cameraType}\n              flashMode={flashMode}\n              style={{ flex: 1 }}\n              ref={(r) => {\n                camera = r;\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundColor: \"transparent\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    left: \"5%\",\n                    top: \"10%\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <TouchableOpacity onPress={() => setStartCamera(false)}>\n                    <Text\n                      style={{\n                        color: \"#ffffff\",\n                        fontSize: 20,\n                        marginVertical: 10,\n                      }}\n                    >\n                      BACK\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={__handleFlashMode}\n                    style={{\n                      backgroundColor: flashMode === \"off\" ? \"#000\" : \"#fff\",\n                      borderRadius: 50,\n                      height: 25,\n                      width: 25,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 20,\n                      }}\n                    >\n                      ⚡️\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={__switchCamera}\n                    style={{\n                      marginTop: 20,\n                      borderRadius: 50,\n                      height: 25,\n                      width: 25,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 20,\n                      }}\n                    >\n                      {cameraType === \"front\" ? \"🤳\" : \"📷\"}\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n                <View\n                  style={{\n                    position: \"absolute\",\n                    bottom: 0,\n                    flexDirection: \"row\",\n                    flex: 1,\n                    width: \"100%\",\n                    padding: 20,\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <View\n                    style={{\n                      alignSelf: \"center\",\n                      flex: 1,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      onPress={__takePicture}\n                      style={{\n                        width: 70,\n                        height: 70,\n                        bottom: 0,\n                        borderRadius: 50,\n                        backgroundColor: \"#ffffff\",\n                      }}\n                    />\n                  </View>\n                </View>\n              </View>\n            </Camera>\n          )}\n        </View>\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => setOpenScanner(true)}\n            style={{\n              width: 130,\n              borderRadius: 4,\n              backgroundColor: colors.lighta,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: 40,\n              marginLeft: 10,\n              marginTop: 10,\n            }}\n          >\n            <Text\n              style={{\n                color: colors.primary,\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n              }}\n            >\n              Scan QR Code\n            </Text>\n          </TouchableOpacity>\n          <TextInput\n            autoCapitalize=\"none\"\n            name=\"assetCode\"\n            label=\"Scan Asset Code\"\n            disabled\n            style={{\n              marginVertical: 10,\n              width: wp(\"95%\"),\n              padding: 5,\n              paddingBottom: 0,\n              fontSize: wp(\"4%\"),\n              backgroundColor: \"#ffffff\",\n            }}\n            onChangeText={(value) => setSubject(value)}\n            value={assetCode}\n          />\n          <TextInput\n            autoCapitalize=\"none\"\n            name=\"assetName\"\n            label=\"Asset Name\"\n            disabled\n            style={{\n              marginBottom: 10,\n              width: wp(\"95%\"),\n              padding: 5,\n              paddingBottom: 0,\n              fontSize: wp(\"4%\"),\n              backgroundColor: \"#ffffff\",\n            }}\n            onChangeText={(value) => setSubject(value)}\n            value={assetName}\n          />\n\n          <TextInput\n            autoCapitalize=\"none\"\n            multiline={true}\n            name=\"Description\"\n            label=\"Description\"\n            numberOfLines={4}\n            style={{\n              marginBottom: 10,\n              backgroundColor: \"#ffffff\",\n              height: hp(\"10%\"),\n              width: wp(\"95%\"),\n              padding: 5,\n              fontSize: wp(\"4%\"),\n            }}\n            onChangeText={(value) => setDescription(value)}\n            value={description}\n          />\n          <View style={{ flex: 1, flexDirection: \"row\" }}>\n            <TouchableOpacity\n              onPress={__startCamera}\n              style={{\n                width: 130,\n                borderRadius: 4,\n                backgroundColor: colors.lighta,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 40,\n                marginLeft: 10,\n              }}\n            >\n              <Text\n                style={{\n                  color: colors.primary,\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                Take A Picture\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => setOpen(true)}\n              style={{\n                width: 130,\n                borderRadius: 4,\n                backgroundColor: colors.lighta,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: 40,\n                marginLeft: 10,\n              }}\n            >\n              <Text\n                style={{\n                  color: colors.primary,\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                View Photos\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n\n      {description ? (\n        photos.length !== 0 ? (\n          <Button\n            mode=\"outline\"\n            style={{\n              width: 300,\n              marginBottom: 10,\n              padding: 10,\n              backgroundColor: colors.lighta,\n            }}\n            onPress={onSubmit}\n          >\n            <Text style={{ color: colors.primary }}>SUBMIT</Text>\n          </Button>\n        ) : null\n      ) : null}\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nconst CameraPreview = ({ photo, retakePicture, savePhoto }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"transparent\",\n        flex: 1,\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <ImageBackground\n        source={{ uri: photo && photo.uri }}\n        style={{\n          flex: 1,\n        }}\n      >\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            padding: 15,\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TouchableOpacity\n              onPress={retakePicture}\n              style={{\n                width: 130,\n                height: 40,\n\n                alignItems: \"center\",\n              }}\n            >\n              <Text\n                style={{\n                  color: \"#fff\",\n                  fontSize: 20,\n                }}\n              >\n                Re-take\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={savePhoto}\n              style={{\n                width: 130,\n                height: 40,\n\n                alignItems: \"center\",\n                borderRadius: 4,\n              }}\n            >\n              <Text\n                style={{\n                  color: \"#fff\",\n                  fontSize: 20,\n                }}\n              >\n                save photo\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}