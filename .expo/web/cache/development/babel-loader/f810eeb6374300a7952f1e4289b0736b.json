{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/node_modules/react-native-barcode-mask/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    justifyContent: 'center'\n  }, StyleSheet.absoluteFillObject),\n  finder: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topLeftEdge: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  topRightEdge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  bottomLeftEdge: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  bottomRightEdge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  },\n  maskOuter: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  maskInner: {\n    backgroundColor: 'transparent'\n  },\n  maskRow: {\n    width: '100%'\n  },\n  maskCenter: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  animatedLine: {\n    position: 'absolute',\n    elevation: 4,\n    zIndex: 0\n  }\n});\n\nvar BarcodeMask = function (_React$Component) {\n  _inherits(BarcodeMask, _React$Component);\n\n  var _super = _createSuper(BarcodeMask);\n\n  function BarcodeMask(props) {\n    var _this;\n\n    _classCallCheck(this, BarcodeMask);\n\n    _this = _super.call(this, props);\n\n    _this._startLineAnimation = function () {\n      var intervalId = setInterval(function () {\n        var _this$state = _this.state,\n            finderLayout = _this$state.finderLayout,\n            intervalId = _this$state.intervalId;\n\n        if (finderLayout && finderLayout.height > 0) {\n          _this._animateLoop();\n\n          clearInterval(intervalId);\n        }\n      }, 500);\n\n      _this.setState({\n        intervalId: intervalId\n      });\n    };\n\n    _this._animateLoop = function () {\n      var _this$props = _this.props,\n          animatedLineOrientation = _this$props.animatedLineOrientation,\n          lineAnimationDuration = _this$props.lineAnimationDuration,\n          useNativeDriver = _this$props.useNativeDriver;\n      var lineTravelWindowDistance = _this.state.lineTravelWindowDistance;\n      var isHorizontal = animatedLineOrientation !== 'vertical';\n      var propertyToChange = isHorizontal ? 'top' : 'left';\n      var startValue = -lineTravelWindowDistance;\n      var endValue = lineTravelWindowDistance;\n      _this.animation = Animated.loop(Animated.sequence([Animated.timing(_this.state[propertyToChange], {\n        toValue: endValue,\n        duration: lineAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(_this.state[propertyToChange], {\n        toValue: startValue,\n        duration: lineAnimationDuration,\n        useNativeDriver: useNativeDriver\n      })]));\n\n      _this.animation.start();\n    };\n\n    _this._applyMaskFrameStyle = function () {\n      var _this$props2 = _this.props,\n          backgroundColor = _this$props2.backgroundColor,\n          outerMaskOpacity = _this$props2.outerMaskOpacity;\n      return {\n        backgroundColor: backgroundColor,\n        opacity: outerMaskOpacity,\n        flex: 1\n      };\n    };\n\n    _this._renderEdge = function (edgePosition) {\n      var _this$props3 = _this.props,\n          edgeWidth = _this$props3.edgeWidth,\n          edgeHeight = _this$props3.edgeHeight,\n          edgeColor = _this$props3.edgeColor,\n          edgeBorderWidth = _this$props3.edgeBorderWidth,\n          edgeRadius = _this$props3.edgeRadius;\n      var edgeRadiusOffset = _this.state.edgeRadiusOffset;\n      var defaultStyle = {\n        width: edgeWidth,\n        height: edgeHeight,\n        borderColor: edgeColor\n      };\n      var edgeBorderStyle = {\n        topRight: {\n          borderRightWidth: edgeBorderWidth,\n          borderTopWidth: edgeBorderWidth,\n          borderTopRightRadius: edgeRadius,\n          top: edgeRadiusOffset,\n          right: edgeRadiusOffset\n        },\n        topLeft: {\n          borderLeftWidth: edgeBorderWidth,\n          borderTopWidth: edgeBorderWidth,\n          borderTopLeftRadius: edgeRadius,\n          top: edgeRadiusOffset,\n          left: edgeRadiusOffset\n        },\n        bottomRight: {\n          borderRightWidth: edgeBorderWidth,\n          borderBottomWidth: edgeBorderWidth,\n          borderBottomRightRadius: edgeRadius,\n          bottom: edgeRadiusOffset,\n          right: edgeRadiusOffset\n        },\n        bottomLeft: {\n          borderLeftWidth: edgeBorderWidth,\n          borderBottomWidth: edgeBorderWidth,\n          borderBottomLeftRadius: edgeRadius,\n          bottom: edgeRadiusOffset,\n          left: edgeRadiusOffset\n        }\n      };\n      return React.createElement(View, {\n        style: [defaultStyle, styles[edgePosition + 'Edge'], edgeBorderStyle[edgePosition]],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this._onFinderLayoutMeasured = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var _this$props4 = _this.props,\n          animatedLineOrientation = _this$props4.animatedLineOrientation,\n          onLayoutMeasured = _this$props4.onLayoutMeasured;\n      var layout = nativeEvent.layout;\n      var isHorizontal = animatedLineOrientation !== 'vertical';\n\n      var travelDistance = _this._calculateLineTravelWindowDistance({\n        layout: layout,\n        isHorizontalOrientation: isHorizontal\n      });\n\n      _this.setState({\n        top: new Animated.Value(-travelDistance),\n        left: new Animated.Value(-travelDistance),\n        lineTravelWindowDistance: travelDistance,\n        finderLayout: layout\n      });\n\n      if (onLayoutMeasured) {\n        onLayoutMeasured({\n          nativeEvent: nativeEvent\n        });\n      }\n    };\n\n    _this.state = {\n      edgeRadiusOffset: props.edgeRadius ? -Math.abs(props.edgeRadius / 3) : 0\n    };\n    return _this;\n  }\n\n  _createClass(BarcodeMask, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._startLineAnimation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.animation) {\n        this.animation.stop();\n      }\n    }\n  }, {\n    key: \"_calculateLineTravelWindowDistance\",\n    value: function _calculateLineTravelWindowDistance(_ref2) {\n      var layout = _ref2.layout,\n          isHorizontalOrientation = _ref2.isHorizontalOrientation;\n      return ((isHorizontalOrientation ? layout.height : layout.width) - 10) / 2;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          width = _this$props5.width,\n          height = _this$props5.height,\n          showAnimatedLine = _this$props5.showAnimatedLine,\n          animatedLineColor = _this$props5.animatedLineColor,\n          animatedLineWidth = _this$props5.animatedLineWidth,\n          animatedLineHeight = _this$props5.animatedLineHeight,\n          animatedLineOrientation = _this$props5.animatedLineOrientation,\n          edgeBorderWidth = _this$props5.edgeBorderWidth;\n      var animatedLineStyle = {\n        backgroundColor: animatedLineColor,\n        height: animatedLineHeight,\n        maxHeight: height,\n        width: animatedLineWidth,\n        maxWidth: width,\n        margin: edgeBorderWidth\n      };\n      var _this$state2 = this.state,\n          finderLayout = _this$state2.finderLayout,\n          top = _this$state2.top,\n          left = _this$state2.left;\n\n      if (finderLayout && animatedLineOrientation !== 'vertical') {\n        animatedLineStyle.transform = [{\n          translateY: top\n        }];\n      } else if (finderLayout) {\n        animatedLineStyle.transform = [{\n          translateX: left\n        }];\n      }\n\n      return React.createElement(View, {\n        style: [styles.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.finder, {\n          width: width,\n          height: height\n        }],\n        onLayout: this._onFinderLayoutMeasured,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, this._renderEdge('topLeft'), this._renderEdge('topRight'), this._renderEdge('bottomLeft'), this._renderEdge('bottomRight'), showAnimatedLine && React.createElement(Animated.View, {\n        style: [styles.animatedLine, animatedLineStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.maskOuter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.maskRow, this._applyMaskFrameStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: [{\n          height: height\n        }, styles.maskCenter],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [this._applyMaskFrameStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [styles.maskInner, {\n          width: width,\n          height: height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [this._applyMaskFrameStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: [styles.maskRow, this._applyMaskFrameStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return BarcodeMask;\n}(React.Component);\n\nvar propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeColor: PropTypes.string,\n  edgeBorderWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeRadius: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  outerMaskOpacity: PropTypes.number,\n  showAnimatedLine: PropTypes.bool,\n  animatedLineColor: PropTypes.string,\n  animatedLineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lineAnimationDuration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineOrientation: PropTypes.string,\n  useNativeDriver: PropTypes.bool,\n  onLayoutMeasured: PropTypes.func\n};\nvar defaultProps = {\n  width: 280,\n  height: 230,\n  edgeWidth: 20,\n  edgeHeight: 20,\n  edgeColor: '#FFF',\n  edgeBorderWidth: 4,\n  backgroundColor: 'rgb(0, 0, 0)',\n  outerMaskOpacity: 0.6,\n  showAnimatedLine: true,\n  animatedLineColor: '#FFF',\n  animatedLineHeight: 2,\n  animatedLineWidth: '85%',\n  lineAnimationDuration: 5000,\n  animatedLineOrientation: 'horizontal',\n  useNativeDriver: true\n};\nBarcodeMask.propTypes = propTypes;\nBarcodeMask.defaultProps = defaultProps;\nexport default BarcodeMask;","map":{"version":3,"sources":["/Users/alvinneri/Desktop/Projects/PMS Mobile/property-management-mobile/employee-app/node_modules/react-native-barcode-mask/index.js"],"names":["React","PropTypes","styles","StyleSheet","create","container","alignItems","justifyContent","absoluteFillObject","finder","topLeftEdge","position","top","left","topRightEdge","right","bottomLeftEdge","bottom","bottomRightEdge","maskOuter","width","height","maskInner","backgroundColor","maskRow","maskCenter","display","flexDirection","animatedLine","elevation","zIndex","BarcodeMask","props","_startLineAnimation","intervalId","setInterval","state","finderLayout","_animateLoop","clearInterval","setState","animatedLineOrientation","lineAnimationDuration","useNativeDriver","lineTravelWindowDistance","isHorizontal","propertyToChange","startValue","endValue","animation","Animated","loop","sequence","timing","toValue","duration","start","_applyMaskFrameStyle","outerMaskOpacity","opacity","flex","_renderEdge","edgePosition","edgeWidth","edgeHeight","edgeColor","edgeBorderWidth","edgeRadius","edgeRadiusOffset","defaultStyle","borderColor","edgeBorderStyle","topRight","borderRightWidth","borderTopWidth","borderTopRightRadius","topLeft","borderLeftWidth","borderTopLeftRadius","bottomRight","borderBottomWidth","borderBottomRightRadius","bottomLeft","borderBottomLeftRadius","_onFinderLayoutMeasured","nativeEvent","onLayoutMeasured","layout","travelDistance","_calculateLineTravelWindowDistance","isHorizontalOrientation","Value","Math","abs","stop","showAnimatedLine","animatedLineColor","animatedLineWidth","animatedLineHeight","animatedLineStyle","maxHeight","maxWidth","margin","transform","translateY","translateX","Component","propTypes","oneOfType","string","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...StyleSheet.absoluteFillObject,\n  },\n  finder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  topLeftEdge: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  topRightEdge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  bottomLeftEdge: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  bottomRightEdge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n  },\n  maskOuter: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  maskInner: {\n    backgroundColor: 'transparent',\n  },\n  maskRow: {\n    width: '100%',\n  },\n  maskCenter: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  animatedLine: {\n    position: 'absolute',\n    elevation: 4,\n    zIndex: 0,\n  },\n});\nclass BarcodeMask extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        edgeRadiusOffset: props.edgeRadius ? -Math.abs(props.edgeRadius / 3) : 0\n    };\n  }\n\n  componentDidMount() {\n    this._startLineAnimation();\n  }\n\n  componentWillUnmount() {\n    if (this.animation) {\n      this.animation.stop();\n    }\n  }\n\n  _startLineAnimation = () => {\n    const intervalId = setInterval(() => {\n      const { finderLayout, intervalId } = this.state;\n      if (finderLayout && finderLayout.height > 0) {\n        this._animateLoop();\n        clearInterval(intervalId);\n      }\n    }, 500);\n    this.setState({\n      intervalId,\n    });\n  };\n\n  _animateLoop = () => {\n    const { \n      animatedLineOrientation,\n      lineAnimationDuration,\n      useNativeDriver\n    } = this.props;\n    const { lineTravelWindowDistance } = this.state;\n    const isHorizontal = animatedLineOrientation !== 'vertical';\n    const propertyToChange = isHorizontal ? 'top' : 'left';\n    const startValue = -lineTravelWindowDistance;\n    const endValue = lineTravelWindowDistance;\n    this.animation = Animated.loop(\n      Animated.sequence([\n        Animated.timing(this.state[propertyToChange], {\n          toValue: endValue,\n          duration: lineAnimationDuration,\n          useNativeDriver\n        }),\n        Animated.timing(this.state[propertyToChange], {\n          toValue: startValue,\n          duration: lineAnimationDuration,\n          useNativeDriver\n        })\n      ])\n    );\n    this.animation.start();\n  }\n\n  _applyMaskFrameStyle = () => {\n    const { backgroundColor, outerMaskOpacity } = this.props;\n    return { backgroundColor, opacity: outerMaskOpacity, flex: 1 };\n  };\n\n  _renderEdge = (edgePosition) => {\n    const { edgeWidth, edgeHeight, edgeColor, edgeBorderWidth, edgeRadius } = this.props;\n    const { edgeRadiusOffset } = this.state;\n    const defaultStyle = {\n        width: edgeWidth,\n        height: edgeHeight,\n        borderColor: edgeColor\n    };\n    const edgeBorderStyle = {\n      topRight: {\n        borderRightWidth: edgeBorderWidth,\n        borderTopWidth: edgeBorderWidth,\n        borderTopRightRadius: edgeRadius,\n        top: edgeRadiusOffset,\n        right: edgeRadiusOffset,\n      },\n      topLeft: {\n        borderLeftWidth: edgeBorderWidth,\n        borderTopWidth: edgeBorderWidth,\n        borderTopLeftRadius: edgeRadius,\n        top: edgeRadiusOffset,\n        left: edgeRadiusOffset\n      },\n      bottomRight: {\n        borderRightWidth: edgeBorderWidth,\n        borderBottomWidth: edgeBorderWidth,\n        borderBottomRightRadius: edgeRadius,\n        bottom: edgeRadiusOffset,\n        right: edgeRadiusOffset\n      },\n      bottomLeft: {\n        borderLeftWidth: edgeBorderWidth,\n        borderBottomWidth: edgeBorderWidth,\n        borderBottomLeftRadius: edgeRadius,\n        bottom: edgeRadiusOffset,\n        left: edgeRadiusOffset,\n      },\n    };\n    return <View style={[defaultStyle, styles[edgePosition + 'Edge'], edgeBorderStyle[edgePosition]]} />;\n  };\n\n  _calculateLineTravelWindowDistance({ layout, isHorizontalOrientation }) {\n    return (((isHorizontalOrientation ? layout.height : layout.width) - 10)/2);\n  }\n\n  _onFinderLayoutMeasured = ({ nativeEvent }) => {\n    const { animatedLineOrientation, onLayoutMeasured } = this.props;\n    const { layout } = nativeEvent;\n    const isHorizontal = animatedLineOrientation !== 'vertical';\n    const travelDistance = this._calculateLineTravelWindowDistance({ \n        layout, \n        isHorizontalOrientation: isHorizontal,\n    });\n    this.setState({\n        top: new Animated.Value(-travelDistance),\n        left: new Animated.Value(-travelDistance),\n        lineTravelWindowDistance: travelDistance, \n        finderLayout: layout,\n    })\n    if (onLayoutMeasured) {\n        onLayoutMeasured({ nativeEvent });\n    }\n  }\n\n  render() {\n    const { \n      width,\n      height,\n      showAnimatedLine,\n      animatedLineColor,\n      animatedLineWidth,\n      animatedLineHeight,\n      animatedLineOrientation,\n      edgeBorderWidth\n    } = this.props;\n    const animatedLineStyle = {\n      backgroundColor: animatedLineColor,\n      height: animatedLineHeight,\n      maxHeight: height,\n      width: animatedLineWidth,\n      maxWidth: width,\n      margin: edgeBorderWidth\n    };\n    const { finderLayout, top, left } = this.state;\n    if (finderLayout && animatedLineOrientation !== 'vertical') {\n        animatedLineStyle.transform = [{ \n            translateY: top\n        }]\n    } else if (finderLayout) {\n        animatedLineStyle.transform = [{ \n            translateX: left\n        }]\n    }\n\n    return (\n      <View style={[styles.container]}>\n        <View\n          style={[ styles.finder, { width, height } ]}\n          onLayout={this._onFinderLayoutMeasured}\n        >\n          {this._renderEdge('topLeft')}\n          {this._renderEdge('topRight')}\n          {this._renderEdge('bottomLeft')}\n          {this._renderEdge('bottomRight')}\n          {showAnimatedLine && (\n            <Animated.View\n              style={[ styles.animatedLine, animatedLineStyle ]}\n            />\n          )}\n        </View>\n        <View style={styles.maskOuter}>\n          <View style={[styles.maskRow, this._applyMaskFrameStyle()]} />\n          <View style={[{ height }, styles.maskCenter]} >\n            <View style={[this._applyMaskFrameStyle()]} />\n            <View style={[ styles.maskInner, { width, height } ]} />\n            <View style={[this._applyMaskFrameStyle()]} />\n          </View>\n          <View style={[styles.maskRow, this._applyMaskFrameStyle()]} />\n        </View>\n      </View>\n    );\n  }\n\n}\n\nconst propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeColor: PropTypes.string,\n  edgeBorderWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeRadius: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  outerMaskOpacity: PropTypes.number,\n  showAnimatedLine: PropTypes.bool,\n  animatedLineColor: PropTypes.string,\n  animatedLineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lineAnimationDuration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineOrientation: PropTypes.string,\n  useNativeDriver: PropTypes.bool,\n  onLayoutMeasured: PropTypes.func\n};\n\nconst defaultProps = {\n  width: 280,\n  height: 230,\n  edgeWidth: 20,\n  edgeHeight: 20,\n  edgeColor: '#FFF',\n  edgeBorderWidth: 4,\n  backgroundColor: 'rgb(0, 0, 0)',\n  outerMaskOpacity: 0.6,\n  showAnimatedLine: true,\n  animatedLineColor: '#FFF',\n  animatedLineHeight: 2,\n  animatedLineWidth: '85%',\n  lineAnimationDuration: 5000,\n  animatedLineOrientation: 'horizontal',\n  useNativeDriver: true\n};\n\nBarcodeMask.propTypes = propTypes;\nBarcodeMask.defaultProps = defaultProps;\n\nexport default BarcodeMask;\n"]},"metadata":{},"sourceType":"module"}